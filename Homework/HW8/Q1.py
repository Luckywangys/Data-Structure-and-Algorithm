'''
描述
在图论中，度数矩阵D 是一个对角矩阵 ，其中包含的信息为的每一个顶点的度数，也就是说，每个顶点相邻的边数。邻接矩阵A 是图的一种常用存储方式。如果一个图一共有编号为0,1,2，…n-1的n个节点，那么邻接矩阵A的大小为n*n，对其中任一元素Aij，如果节点i，j直接有边，那么Aij=1；否则Aij=0。
将度数矩阵与邻接矩阵逐位相减，可以求得图的拉普拉斯矩阵。
现给出一个图中的所有边的信息，需要你输出该图的拉普拉斯矩阵。
输入
第一行2个整数，代表该图的顶点数n和边数m。
接下m行，每行为空格分隔的2个整数a和b，代表顶点a和顶点b之间有一条无向边相连，a和b均为大小范围在0到n-1之间的整数。输入保证每条无向边仅出现一次（如1 2和2 1是同一条边，并不会在数据中同时出现）。
输出
共n行，每行为以空格分隔的n个整数，代表该图的拉普拉斯矩阵。
'''

#2200015507 王一粟
n,m = [int(i) for i in input().split()]
edges = [[0]*n for i in range(n)]
for _ in range(m):
    v1,v2 = [int(i) for i in input().split()]
    edges[v1][v1] += 1
    edges[v2][v2] += 1
    edges[v1][v2] -= 1
    edges[v2][v1] -= 1
for _ in range(n):
    print(" ".join(str(i) for i in edges[_]))